# Copyright (c) 2021 Universität Tübingen, Germany
# Authors: Leon Kuchenbecker <leon.kuchenbecker@uni-tuebingen.de>,
#          Kersten Breuer <k.breuer@dkfz.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Generated by taking https://github.com/gothinkster/realworld/blob/master/api/swagger.json
# and feeding it into https://mermade.org.uk/openapi-converter

openapi: 3.0.0
info:
  description: DataMeta
  version: 1.0.0
  title: DataMeta


servers:
  - url: /api


paths:

  /keys:
    post:
      summary: Create new API Key/Token
      description: Create new API Key/Token
      tags:
        - Authentication
      operationId: CreateApiKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTokenRequest"
        description: >-
          Credentials to use (optional when using cookie sessions)
          and a label for the ApiKey to be created.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSession"
        "401":
          description: Unauthorized
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationError'

          

components:

  schemas:
    CreateTokenRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        label:
          type: string
        # email and password are 
        # not required when using cookie-based
        # sessions from the front end
      required:
        - label

    UserSession:
      type: object
      properties:
        userId:
          type: string
        token:
          type: string
        label:
          type: string
        expiresAt:
          type: string
          nullable: true
      required:
        - userId
        - token
        - expiresAt

    Error:
      type: object
      properties:
        exception:
          type: string
        message:
          type: string
        field:
          type: string
      required:
        - message

    ValidationErrorModel:
      type: array
      items:
        $ref: "#/components/schemas/Error"

  
  responses:
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ValidationErrorModel"
