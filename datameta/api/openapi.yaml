# Generated by taking https://github.com/gothinkster/realworld/blob/master/api/swagger.json
# and feeding it into https://mermade.org.uk/openapi-converter

openapi: 3.0.0
info:
  description: DataMeta
  version: 1.0.0
  title: DataMeta


servers:
  - url: /api


paths:

  /login:
    post:
      summary: Existing user login
      description: Login for existing user
      tags:
        - Authentication
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUser"
        description: Credentials to use
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSession"
        "401":
          description: Unauthorized
        "422":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericErrorModel"
  
  /metadatasets:
    get:
      summary: Get all metadatasets of all groups
      description: |
        A metadataset corresponds to one row in a metadata spreadsheet.
        It contains all metadatarecords for this entry.
      tags:
        - Metadata
        - Admin
      operationId: GetAllMetadatasets
      responses:
        "200":
          description: OK
          # content:
          #   application/json:
          #     schema:
          #       $ref: "#/components/schemas/metadatasets" #!
        "401":
          description: Unauthorized, admin rights required
        "422":
          description: Unexpected error
          # content:
          #   application/json:
          #     schema:
          #       $ref: "#/components/schemas/GenericErrorModel" #!


components:

  schemas:
    LoginUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    UserSession:
      type: object
      properties:
        userId:
          type: string
        email:
          type: string
        token:
          type: string
        expiresAt:
          type: string
      required:
        - userId
        - email
        - token
        - expiresAt

    GenericErrorModel:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - errors